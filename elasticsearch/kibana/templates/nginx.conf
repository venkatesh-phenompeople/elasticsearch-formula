server {
    listen 80;
    listen [::]:80;
    {% if config.get('server_name') -%}
    server_name {{ config.server_name }};
    {%- endif %}

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    
    location / {
        proxy_pass http://localhost:{{ kibana_config['server.port'] }}/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
    }
    #return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    {% if config.get('server_name') -%}
    server_name {{ config.server_name }};
    {%- endif %}

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    #ssl_certificate {{ config.cert_path }};
    #ssl_certificate_key {{ config.key_path }};
    #ssl_session_timeout 1d;
    #ssl_session_cache shared:SSL:50m;
    #ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    #ssl_dhparam {{ ssl_directory }}/dhparam.pem;

    # modern configuration. tweak to your needs.
    #ssl_protocols TLSv1.2;
    #ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    #ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    #add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    #ssl_stapling on;
    #ssl_stapling_verify on;

    resolver 8.8.8.8;

    {% if config.get('root_path') %}
    root {{ config.root_path }};
    {% endif %}
    index index.html;

    # start_extra_configs
    # end_extra_configs

    location / {
        proxy_pass http://localhost:{{ kibana_config['server.port'] }}/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

}

server {
    listen 127.0.0.1:80;
    location /nginx_status {
        stub_status on;
        access_log off;
    }
}
